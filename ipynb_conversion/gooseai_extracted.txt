[markdown]
# GooseAI

`GooseAI` is a fully managed NLP-as-a-Service, delivered via API. GooseAI provides access to [these models](https://goose.ai/docs/models).

This notebook goes over how to use Langchain with [GooseAI](https://goose.ai/).


[markdown]
## Install openai
The `openai` package is required to use the GooseAI API. Install `openai` using `pip install openai`.

[code]
%pip install --upgrade --quiet  langchain-openai

[markdown]
## Imports

[code]
import os

from langchain.chains import LLMChain
from langchain_community.llms import GooseAI
from langchain_core.prompts import PromptTemplate

[markdown]
## Set the Environment API Key
Make sure to get your API key from GooseAI. You are given $10 in free credits to test different models.

[code]
from getpass import getpass

GOOSEAI_API_KEY = getpass()

[code]
os.environ["GOOSEAI_API_KEY"] = GOOSEAI_API_KEY

[markdown]
## Create the GooseAI instance
You can specify different parameters such as the model name, max tokens generated, temperature, etc.

[code]
llm = GooseAI()

[markdown]
## Create a Prompt Template
We will create a prompt template for Question and Answer.

[code]
template = """Question: {question}

Answer: Let's think step by step."""

prompt = PromptTemplate.from_template(template)

[markdown]
## Initiate the LLMChain

[code]
llm_chain = LLMChain(prompt=prompt, llm=llm)

[markdown]
## Run the LLMChain
Provide a question and run the LLMChain.

[code]
question = "What NFL team won the Super Bowl in the year Justin Beiber was born?"

llm_chain.run(question)

