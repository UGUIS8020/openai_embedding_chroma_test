[markdown]
# __ModuleName__Toolkit

- TODO: Make sure API reference link is correct.

This will help you getting started with the __ModuleName__ [toolkit](/docs/concepts/#toolkits). For detailed documentation of all __ModuleName__Toolkit features and configurations head to the [API reference](https://api.python.langchain.com/en/latest/agent_toolkits/__module_name__.agent_toolkits.__ModuleName__.toolkit.__ModuleName__Toolkit.html).

## Setup

- TODO: Update with relevant info.

[markdown]
If you want to get automated tracing from runs of individual tools, you can also set your [LangSmith](https://docs.smith.langchain.com/) API key by uncommenting below:

[code]
# os.environ["LANGSMITH_API_KEY"] = getpass.getpass("Enter your LangSmith API key: ")
# os.environ["LANGSMITH_TRACING"] = "true"

[markdown]
### Installation

This toolkit lives in the `__package_name__` package:

[code]
%pip install -qU __package_name__

[markdown]
## Instantiation

Now we can instantiate our toolkit:

- TODO: Update model instantiation with relevant params.

[code]
from __module_name__ import __ModuleName__Toolkit

toolkit = __ModuleName__Toolkit(
    # ...
)

[markdown]
## Tools

View available tools:

[code]
toolkit.get_tools()

[markdown]
TODO: list API reference pages for individual tools.

[markdown]
## Use within an agent

[code]
from langgraph.prebuilt import create_react_agent

agent_executor = create_react_agent(llm, tools)

[code]
example_query = "..."

events = agent_executor.stream(
    {"messages": [("user", example_query)]},
    stream_mode="values",
)
for event in events:
    event["messages"][-1].pretty_print()

[markdown]
## TODO: Any functionality or considerations specific to this toolkit

Fill in or delete if not relevant.

[markdown]
## API reference

For detailed documentation of all __ModuleName__Toolkit features and configurations head to the [API reference](https://api.python.langchain.com/en/latest/agent_toolkits/__module_name__.agent_toolkits.__ModuleName__.toolkit.__ModuleName__Toolkit.html).

