[markdown]
# CerebriumAI

`Cerebrium` is an AWS Sagemaker alternative. It also provides API access to [several LLM models](https://docs.cerebrium.ai/cerebrium/prebuilt-models/deployment).

This notebook goes over how to use Langchain with [CerebriumAI](https://docs.cerebrium.ai/introduction).

[markdown]
## Install cerebrium
The `cerebrium` package is required to use the `CerebriumAI` API. Install `cerebrium` using `pip3 install cerebrium`.

[code]
# Install the package
!pip3 install cerebrium

[markdown]
## Imports

[code]
import os

from langchain.chains import LLMChain
from langchain_community.llms import CerebriumAI
from langchain_core.prompts import PromptTemplate

[markdown]
## Set the Environment API Key
Make sure to get your API key from CerebriumAI. See [here](https://dashboard.cerebrium.ai/login). You are given a 1 hour free of serverless GPU compute to test different models.

[code]
os.environ["CEREBRIUMAI_API_KEY"] = "YOUR_KEY_HERE"

[markdown]
## Create the CerebriumAI instance
You can specify different parameters such as the model endpoint url, max length, temperature, etc. You must provide an endpoint url.

[code]
llm = CerebriumAI(endpoint_url="YOUR ENDPOINT URL HERE")

[markdown]
## Create a Prompt Template
We will create a prompt template for Question and Answer.

[code]
template = """Question: {question}

Answer: Let's think step by step."""

prompt = PromptTemplate.from_template(template)

[markdown]
## Initiate the LLMChain

[code]
llm_chain = LLMChain(prompt=prompt, llm=llm)

[markdown]
## Run the LLMChain
Provide a question and run the LLMChain.

[code]
question = "What NFL team won the Super Bowl in the year Justin Beiber was born?"

llm_chain.run(question)

