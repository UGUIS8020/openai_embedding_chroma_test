[markdown]
# Jina

You can check the list of available models from [here](https://jina.ai/embeddings/).

## Installation and setup

[markdown]
Install requirements

[code]
pip install -U langchain-community

[markdown]
Import libraries

[code]
import requests
from langchain_community.embeddings import JinaEmbeddings
from numpy import dot
from numpy.linalg import norm
from PIL import Image

[markdown]
## Embed text and queries with Jina embedding models through JinaAI API

[code]
text_embeddings = JinaEmbeddings(
    jina_api_key="jina_*", model_name="jina-embeddings-v2-base-en"
)

[code]
text = "This is a test document."

[code]
query_result = text_embeddings.embed_query(text)

[code]
print(query_result)

[code]
doc_result = text_embeddings.embed_documents([text])

[code]
print(doc_result)

[markdown]
## Embed images and queries with Jina CLIP through JinaAI API

[code]
multimodal_embeddings = JinaEmbeddings(jina_api_key="jina_*", model_name="jina-clip-v1")

[code]
image = "https://avatars.githubusercontent.com/u/126733545?v=4"

description = "Logo of a parrot and a chain on green background"

im = Image.open(requests.get(image, stream=True).raw)
print("Image:")
display(im)

[code]
image_result = multimodal_embeddings.embed_images([image])

[code]
print(image_result)

[code]
description_result = multimodal_embeddings.embed_documents([description])

[code]
print(description_result)

[code]
cosine_similarity = dot(image_result[0], description_result[0]) / (
    norm(image_result[0]) * norm(description_result[0])
)

[code]
print(cosine_similarity)

